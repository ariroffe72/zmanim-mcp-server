name: Publish to PyPI and Update Registry

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.1)'
        required: true
        type: string

jobs:
  publish-pypi:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For PyPI trusted publishing
      contents: write  # For committing version changes
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Update version in pyproject.toml
        run: |
          sed -i 's/^version = .*/version = "${{ inputs.version }}"/' pyproject.toml
      
      - name: Update version in server.json (both locations)
        run: |
          # Update top-level version
          sed -i '0,/"version": "[^"]*"/s//"version": "${{ inputs.version }}"/' server.json
          # Update package-level version
          sed -i 's/"version": "[^"]*",/"version": "${{ inputs.version }}",/g' server.json
      
      - name: Commit version changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml server.json
          git commit -m "chore: bump version to ${{ inputs.version }}"
          git push
      
      - name: Create Git tag
        run: |
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"
      
      - name: Install dependencies
        run: |
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
